* reportforce: a python module to get Salesforce reports

If you ever needed a way to download Salesforce reports to do some
kind of analysis, say, in Excel, and cursed it because it gets so
tedious to do it manually in the browser, this package may be of help.

It aims to ease the task of getting a Salesforce report, by
downloading and parsing it into a pandas DataFrame.

And, the *killer feature* with a workaround to the 2000 row limit!
Let's see how this works.

First, we will need to authenticate. This is how you can do it:

** Authenticating

#+BEGIN_SRC python :session
from reportforce.login import Login

session = Login(username="foo@bar.com", password="1234", security_token="XXX")
#+END_SRC

You may also choose to use the more sophisticated simple_salesforce
module to get a session object to authenticate your requests.

** Getting report, the simple way

Now, if your report is less than 2000 lines. No need to worry much,
this is all you need to do:

#+BEGIN_SRC python :session
from reportforce.report import get_report

get_report("REPORTID", session=session)
#+END_SRC

** Getting more than 2000 rows

But!! If it has more than 2000 rows and you want all of them, you'll
need to provide a column name that has a unique value for each
row. Yes, this is needed because the API doesn't provide a way to
limit by row number etc.

#+BEGIN_SRC python :session
get_report("REPORTID", id_column="COLUMN_WITH_UNIQUE_VALUES", session=session)
#+END_SRC

** Filtering by dates

You can also filter the report by dates on the fly:

#+BEGIN_SRC python :session
get_report("REPORTID", start="01 December, 2019", end="31/01/2020", session=session)
#+END_SRC

** Filtering arbitrary columns
   
And, if you want to filter a report field, you may do it like this:

#+BEGIN_SRC python :session
get_report("REPORTID", filters=[("FILTER_COLUMN", ">=", "VALUE")]
#+END_SRC

** Adding filter logic

It may be needed to add a logic to your filters, usually when there is
already one in the report. You can do it as follows:

#+BEGIN_SRC python :session
get_report("REPORTID", logic="1 AND 2")
#+END_SRC
